>>>2022-09-26 21:30:59,458-py52-INFO-handle_setup_sql.py: 开始执行前置sql 
>>>2022-09-26 21:30:59,458-py52-INFO-handle_setup_sql.py: 入参数据类型:<class 'NoneType'>参数:None 
>>>2022-09-26 21:30:59,458-py52-INFO-handle_setup_sql.py: sql_list为空，不需要执行前置sql去获取数据 
>>>2022-09-26 21:30:59,458-py52-INFO-handle_replace.py: 开始执行请求参数替换 
>>>2022-09-26 21:30:59,459-py52-INFO-handle_replace.py: 入参数据类型:<class 'str'>,入参:{
   "principal": "18820992515",
   "credentials": "123456",
   "appType": 3,
   "loginType": 0
        } 
>>>2022-09-26 21:30:59,459-py52-INFO-handle_replace.py: 不需要替换请求参数，直接返回json数据：{'principal': '18820992515', 'credentials': '123456', 'appType': 3, 'loginType': 0} 
>>>2022-09-26 21:30:59,679-py52-INFO-handle_setup_sql.py: 开始执行前置sql 
>>>2022-09-26 21:30:59,679-py52-INFO-handle_setup_sql.py: 入参数据类型:<class 'NoneType'>参数:None 
>>>2022-09-26 21:30:59,679-py52-INFO-handle_setup_sql.py: sql_list为空，不需要执行前置sql去获取数据 
>>>2022-09-26 21:30:59,679-py52-INFO-handle_replace.py: 开始执行请求参数替换 
>>>2022-09-26 21:30:59,680-py52-INFO-handle_replace.py: 入参数据类型:<class 'NoneType'>,入参:None 
>>>2022-09-26 21:30:59,680-py52-INFO-handle_replace.py: 请求参数为空，不需要替换参数 
>>>2022-09-26 21:30:59,786-py52-INFO-handle_setup_sql.py: 开始执行前置sql 
>>>2022-09-26 21:30:59,787-py52-INFO-handle_setup_sql.py: 入参数据类型:<class 'str'>参数:["select seckill_sku_id from tz_seckill_sku where seckill_stocks>0 and seckill_id in (select seckill_id from tz_seckill where max_num = -1 and  status = 1 and seckill_total_stocks > 0 and seckill_origin_stocks > 0) order by seckill_sku_id desc  limit 1"] 
>>>2022-09-26 21:30:59,787-py52-INFO-handle_setup_sql.py: sql_list不为空，需要执行前置sql语句 
>>>2022-09-26 21:30:59,787-py52-INFO-handle_replace.py: 开始执行sql语句替换方法replace_sql 
>>>2022-09-26 21:30:59,787-py52-INFO-handle_replace.py: sql语句不需要替换数据 
>>>2022-09-26 21:30:59,787-py52-INFO-handle_replace.py: 返回的sql:select seckill_sku_id from tz_seckill_sku where seckill_stocks>0 and seckill_id in (select seckill_id from tz_seckill where max_num = -1 and  status = 1 and seckill_total_stocks > 0 and seckill_origin_stocks > 0) order by seckill_sku_id desc  limit 1 
>>>2022-09-26 21:30:59,823-py52-INFO-handle_setup_sql.py: 前置sql执行结果[{'seckill_sku_id': 214}] 
>>>2022-09-26 21:30:59,823-py52-INFO-handle_setup_sql.py: 前置sql设置全局变量key=seckill_sku_id,value=214 
>>>2022-09-26 21:30:59,824-py52-INFO-handle_replace.py: 开始执行请求参数替换 
>>>2022-09-26 21:30:59,824-py52-INFO-handle_replace.py: 入参数据类型:<class 'str'>,入参:{
            "addrId": 0,
            "prodCount": 1,
            "seckillSkuId": "#seckill_sku_id#"
} 
>>>2022-09-26 21:30:59,824-py52-INFO-handle_replace.py: 替换请求参数后，返回json数据：{'addrId': 0, 'prodCount': 1, 'seckillSkuId': '214'} 
>>>2022-09-26 21:31:00,016-py52-INFO-handle_setup_sql.py: 开始执行前置sql 
>>>2022-09-26 21:31:00,017-py52-INFO-handle_setup_sql.py: 入参数据类型:<class 'NoneType'>参数:None 
>>>2022-09-26 21:31:00,017-py52-INFO-handle_setup_sql.py: sql_list为空，不需要执行前置sql去获取数据 
>>>2022-09-26 21:31:00,017-py52-INFO-handle_replace.py: 开始执行请求参数替换 
>>>2022-09-26 21:31:00,017-py52-INFO-handle_replace.py: 入参数据类型:<class 'str'>,入参:{
 "orderShopParam": {
   "remarks": "",
    "shopId": 1
      },
 "orderPath": "#order_path#"
 } 
>>>2022-09-26 21:31:00,018-py52-INFO-handle_replace.py: 替换请求参数后，返回json数据：{'orderShopParam': {'remarks': '', 'shopId': 1}, 'orderPath': '3DXSy3Jr7va'} 
>>>2022-09-26 21:31:00,237-py52-INFO-handle_setup_sql.py: 开始执行前置sql 
>>>2022-09-26 21:31:00,238-py52-INFO-handle_setup_sql.py: 入参数据类型:<class 'NoneType'>参数:None 
>>>2022-09-26 21:31:00,238-py52-INFO-handle_setup_sql.py: sql_list为空，不需要执行前置sql去获取数据 
>>>2022-09-26 21:31:00,238-py52-INFO-handle_replace.py: 开始执行请求参数替换 
>>>2022-09-26 21:31:00,238-py52-INFO-handle_replace.py: 入参数据类型:<class 'str'>,入参:{
   "payType": 3,
    "orderNumbers": "#orderNumbers#"
 } 
>>>2022-09-26 21:31:00,238-py52-INFO-handle_replace.py: 替换请求参数后，返回json数据：{'payType': 3, 'orderNumbers': '1574391085340561408'} 
>>>2022-09-26 21:31:00,770-py52-INFO-handle_replace.py: 开始执行sql语句替换方法replace_sql 
>>>2022-09-26 21:31:00,770-py52-INFO-handle_replace.py: sql语句需要进行参数替换 
>>>2022-09-26 21:31:00,770-py52-INFO-handle_replace.py: 替换之前sql:select count(*) from tz_order where order_number = '#orderNumbers#' 
>>>2022-09-26 21:31:00,770-py52-INFO-handle_replace.py: 替换之后sql:select count(*) from tz_order where order_number = '1574391085340561408' 
>>>2022-09-26 21:31:00,770-py52-INFO-handle_replace.py: 返回的sql:select count(*) from tz_order where order_number = '1574391085340561408' 
>>>2022-09-26 21:31:00,808-py52-INFO-handle_setup_sql.py: 开始执行前置sql 
>>>2022-09-26 21:31:00,808-py52-INFO-handle_setup_sql.py: 入参数据类型:<class 'NoneType'>参数:None 
>>>2022-09-26 21:31:00,809-py52-INFO-handle_setup_sql.py: sql_list为空，不需要执行前置sql去获取数据 
>>>2022-09-26 21:31:00,809-py52-INFO-handle_replace.py: 开始执行请求参数替换 
>>>2022-09-26 21:31:00,809-py52-INFO-handle_replace.py: 入参数据类型:<class 'str'>,入参:{
"payNo":"#orderNumbers#",
"bizPayNo":"#time#",
 "isPaySuccess":true
 } 
>>>2022-09-26 21:31:00,809-py52-INFO-handle_replace.py: 替换请求参数后，返回json数据：{'payNo': '1574391085340561408', 'bizPayNo': '1664199060809', 'isPaySuccess': True} 
>>>2022-09-26 21:31:01,054-py52-INFO-handle_replace.py: 开始执行sql语句替换方法replace_sql 
>>>2022-09-26 21:31:01,054-py52-INFO-handle_replace.py: sql语句需要进行参数替换 
>>>2022-09-26 21:31:01,054-py52-INFO-handle_replace.py: 替换之前sql:select status from tz_order where order_number = '#orderNumbers#' 
>>>2022-09-26 21:31:01,054-py52-INFO-handle_replace.py: 替换之后sql:select status from tz_order where order_number = '1574391085340561408' 
>>>2022-09-26 21:31:01,054-py52-INFO-handle_replace.py: 返回的sql:select status from tz_order where order_number = '1574391085340561408' 
